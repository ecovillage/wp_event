#!/usr/bin/env ruby

require 'wp_event'
require 'optparse'
require 'json'

extend WPEvent::CLI::Logging

options = {}

option_parser = OptionParser.new do |opts|
  opts.banner = <<~USAGE
    Usage: #{$PROGRAM_NAME} [options] FILE

    Sync a list of event categories with event categories registered in wordpress instance

    FILE is supposed to be a json array of hashes (uuid:, name:, description:)
    Will exit with 0 on success

  USAGE
  opts.separator "Common options"
  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
  opts.on_tail("-h", "--help", "Show this message and exit") do
    puts opts
    exit
  end
  opts.on_tail("--version", "Show version and exit") do
    puts WPEvent::VERSION
    exit
  end
end

# Process options
option_parser.parse!

WPEvent.logger.level = options[:verbose] ? Logger::DEBUG : Logger::INFO

debug "Starting event category sync (#{WPEvent::VERSION})"

# Process options
option_parser.parse!

if ARGV.length != 1
  STDERR.puts "Please provide json input file."
  puts option_parser
  exit 1
end

begin
  WPEvent.load_conf
rescue Errno::ENOENT
  STDERR.puts "Config file (wp_event.conf) not found."
  exit 3
end

categories = JSON.parse File.read(ARGV[0])

categories.each do |category|
  wp_category = WPEvent::CategoryPost.uuid_in_wordpress? category["uuid"]
  if wp_category
    info "category with uuid #{category['uuid']} found"
  else
    info "category with uuid #{category['uuid']} not found, creating"
    wp_category = WPEvent::CategoryPost.create category["uuid"],
                                               category["name"],
                                               category["description"]
  end
end

exit 0
